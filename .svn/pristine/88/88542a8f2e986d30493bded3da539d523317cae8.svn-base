package com.qms.item.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qms.code.service.CodeService;
import com.qms.item.service.ItemService;
import com.qms.item.vo.ItemPageVO;
import com.qms.item.vo.ItemVO;
import com.qms.table.vo.common.ComCodeVO;
import com.qms.table.vo.item.ItemInfoVO;

@Controller
public class ItemController {
	
	@Autowired
	ItemService service;
	@Autowired
	CodeService cdservice;
	
	@RequestMapping("/item/itemList")
	public String goodsList() throws Exception{
		return "/item/item01";
	}
	// 제품유형 콤보박스
	@RequestMapping("/item/getItemType")
	@ResponseBody
	public ItemVO getItemType()throws Exception{
		ItemVO itvo = new ItemVO();
		ComCodeVO vo = new ComCodeVO();
		
		vo.setComGrpCd("IT01");
		List<ComCodeVO> list1 = cdservice.selectComCodeList(vo);
		itvo.setItemTypeList(list1);
		
		vo.setComGrpCd("IT02");
		List<ComCodeVO> list2 = cdservice.selectComCodeList(vo);
		itvo.setUnitTypeList(list2);
		
		vo.setComGrpCd("IT03");
		List<ComCodeVO> list3 = cdservice.selectComCodeList(vo);
		itvo.setBoxTypeList(list3);
		
		vo.setComGrpCd("IT04");
		List<ComCodeVO> list4 = cdservice.selectComCodeList(vo);
		itvo.setPlantLineList(list4);
		
		vo.setComGrpCd("IT05");
		List<ComCodeVO> list5 = cdservice.selectComCodeList(vo);
		itvo.setLocationList(list5);

		return itvo;
	}
	
	// 제품 조회하기
	@RequestMapping("/item/getItemList")
	@ResponseBody
	public ItemPageVO getItemList(@ModelAttribute("ItemInfoVO") ItemInfoVO vo)throws Exception{
		
		int totalPage = 0;
		
		ItemPageVO itempagevo = new ItemPageVO();
		totalPage = service.selectTotalItemCount(vo);
		List<ItemInfoVO> list = service.selectItemList(vo);
		
		itempagevo.setItemlist(list);
		itempagevo.setTotal(totalPage); // 총 데이터 수
		itempagevo.setStartPage(vo.getStartPage());
		itempagevo.setCurrentPage(vo.getCurrentPage()); // 현재 페이지
		
		return itempagevo;
	}
	
	// 제품 상세조회
	@RequestMapping("/item/getItemDtl")
	@ResponseBody
	public ItemInfoVO getItemDtl(@ModelAttribute("ItemInfoVO")ItemInfoVO vo)throws Exception{
		ComCodeVO comvo = new ComCodeVO();
		
		vo = service.selectItemDtl(vo);
		
		return vo;
	}
	
	// 제품 수정/등록
	@RequestMapping("/item/commitItem")
	@ResponseBody
	public int commitItem(@ModelAttribute("ItemVO")ItemVO vo)throws Exception{
		
		int cnt = 0;

		if(vo.getCommitType().equals("1")) {
			if(vo.getSubconYn() == null) {
				vo.setSubconYn("N");
			}
			cnt += service.insertItem(vo);
		}else{
			if(vo.getSubconYn() == null) {
				vo.setSubconYn("N");
			}
			cnt += service.updateItem(vo);
		}
		return cnt;
	}
}
