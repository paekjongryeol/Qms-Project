<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qms.myCode.dao.myCodeDao">
					 
	<resultMap type="com.qms.myCode.vo.myCodeVO" id="myCodeMap">
		<result property="userId" column="user_id"/>
		<result property="userName" column="user_name"/>
		<result property="deptCd" column="dept_cd"/>
		<result property="userPwd" column="user_pwd"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="leaveDt" column="leave_dt"/>
		<result property="leaveYn" column="leave_yn"/>
		<result property="deptName" column="dept_name"/>
		<result property="comCd" column="com_cd"/>
		<result property="comName" column="com_name"/>
		<result property="comGrpCd" column="com_grp_cd"/>
		<result property="regDt" column="reg_dt"/>		
	</resultMap>

	<select id="selectUserListSearchCount" resultType="integer">
		SELECT COUNT(*)
			FROM TB_USER_INFO A, TB_DEPT_INFO B, TB_COM_CODE C
			    WHERE A.DEPT_CD = B.DEPT_CD
			    AND A.POSITION_CD = C.COM_CD
			    AND C.COM_GRP_CD = #{comGrpCd}
		<if test="userName != null and userName != ''">
	        AND A.USER_NAME like '%'||#{userName}||'%'
	    </if>
	    <if test="joinDtFrom != null and joinDtFrom != ''">
			AND TO_CHAR(A.REG_DT, 'yyyy-mm-dd') <![CDATA[ >= ]]> #{joinDtFrom}
		</if>
		<if test="joinDtTo != null and joinDtTo != ''">
			AND TO_CHAR(A.REG_DT, 'yyyy-mm-dd') <![CDATA[ <= ]]> #{joinDtTo}
		</if>
	    <if test="userName != null and userName != ''">
	        AND A.USER_NAME like '%'||#{userName}||'%'
	    </if>
	    <if test="leaveYn != null and leaveYn != ''">
		    AND A.LEAVE_YN = #{leaveYn}
		</if>
	</select>
	
	<select id="selectUserListSearch" resultMap="myCodeMap">
	    SELECT
	    	USER_ID,
	        USER_NAME,
	        DEPT_NAME,
	        COM_NAME,
	        PHONE,
	        EMAIL,
	        LEAVE_YN,
	        LEAVE_DT,
	        REG_DT
	    FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY C.COM_CD) AS RN,
	    		A.USER_ID,
	        	A.USER_NAME,
	        	B.DEPT_NAME,
	        	C.COM_NAME,
	        	A.PHONE,
	        	A.EMAIL,	        	
	        	A.LEAVE_YN,
	        	TO_CHAR(A.LEAVE_DT, 'YYYY-MM-DD') LEAVE_DT,
	        	TO_CHAR(A.REG_DT, 'YYYY-MM-DD') REG_DT
	    FROM TB_USER_INFO A, TB_DEPT_INFO B, TB_COM_CODE C
	    	WHERE A.DEPT_CD = B.DEPT_CD
	    	AND A.POSITION_CD = C.COM_CD
	    	AND C.COM_GRP_CD = #{comGrpCd}
	    <if test="userName != null and userName != ''">
	        AND A.USER_NAME like '%'||#{userName}||'%'
	    </if>
	    <if test="joinDtFrom != null and joinDtFrom != ''">
			AND TO_CHAR(A.REG_DT, 'yyyy-mm-dd') <![CDATA[ >= ]]> #{joinDtFrom}
		</if>
		<if test="joinDtTo != null and joinDtTo != ''">
			AND TO_CHAR(A.REG_DT, 'yyyy-mm-dd') <![CDATA[ <= ]]> #{joinDtTo}
		</if>
	    <if test="userName != null and userName != ''">
	        AND A.USER_NAME like '%'||#{userName}||'%'
	    </if>
	    <if test="leaveYn != null and leaveYn != ''">
		    AND A.LEAVE_YN = #{leaveYn}
		</if>
		)
		    WHERE RN <![CDATA[ > ]]> (#{currentPage}-1)*#{countPerPage} 
		    AND RN <![CDATA[ <= ]]> #{currentPage}*#{countPerPage}
	</select>

	<select id="selectUserPopup" resultMap="myCodeMap">
		    SELECT
	            A.USER_ID,
	            A.USER_NAME,
	            A.USER_PWD,
	            B.DEPT_NAME,
	            C.COM_NAME,
	            A.PHONE,
	            A.EMAIL,	        	
	            A.LEAVE_YN,
	            A.LEAVE_DT,
	            A.REG_DT,
	            C.COM_CD,
                B.DEPT_CD
            FROM TB_USER_INFO A, TB_DEPT_INFO B, TB_COM_CODE C
	        WHERE A.DEPT_CD = B.DEPT_CD
	        AND A.POSITION_CD = C.COM_CD
	        AND C.COM_GRP_CD = #{comGrpCd}
	        AND A.USER_ID = #{userId}
	</select>
	
	<select id="selectComNameBox" resultMap="myCodeMap">
		SELECT 
		    COM_NAME,
		    COM_CD
		    FROM TB_COM_CODE
		    WHERE COM_GRP_CD = #{comGrpCd}
	</select>
	
	<select id="selectDeptNameBox" resultMap="myCodeMap">
		SELECT 
		    DEPT_NAME,
		    DEPT_CD
		    FROM TB_DEPT_INFO
	</select>
	
	<insert id="insertUserInfo">
		INSERT INTO TB_USER_INFO
			(USER_ID, USER_NAME, DEPT_CD, USER_PWD, PHONE, EMAIL, LEAVE_YN, REG_DT, POSITION_CD)
			VALUES(#{userId}, #{userName}, #{deptName}, #{userPwd}, #{phone}, #{email}, #{leaveYn}, SYSDATE, #{comName})
	</insert>
	
	<update id="updateUserInfo">
		UPDATE TB_USER_INFO
			SET
				USER_ID = #{userId},
				USER_NAME = #{userName},
				USER_PWD = #{userPwd},
				POSITION_CD = #{comName},
				DEPT_CD = #{deptName},
				PHONE = #{phone},
				EMAIL = #{email},
				LEAVE_YN =	#{leaveYn},
				LEAVE_DT = #{leaveDt}
			WHERE USER_ID = #{userId}
	</update>
	
	<resultMap type="com.qms.myCode.vo.deptVO" id="deptMap">
		<result property="deptCd" column="dept_cd"/>
		<result property="deptName" column="dept_name"/>
		<result property="upDeptCd" column="up_dept_cd"/>
		<result property="delYn" column="del_yn"/>
		<result property="regDt" column="reg_dt"/>
		<result property="regUserId" column="reg_user_id"/>
		<result property="updDt" column="upd_dt"/>
		<result property="updUserId" column="upd_user_id"/>
		<result property="useDept" column="use_dept"/>		
	</resultMap>
	
	<select id="selectDeptListSearchCount" resultType="integer">
		SELECT COUNT(*)
			FROM TB_DEPT_INFO A
		WHERE 1=1
		<if test="deptName != null and deptName != ''">
		    AND A.DEPT_NAME like '%' || #{deptName} || '%'
		</if>
		<if test="delYn != null and delYn != ''">
		    AND A.DEL_YN = #{delYn}
		</if>
	</select>
	
	<select id="selectDeptListSearch" resultMap="deptMap">
	    SELECT
		    DEPT_CD,
		    DEPT_NAME,
		    UP_DEPT_CD,
		    USE_DEPT,
		    DEL_YN,
		    REG_DT
		FROM (
		    SELECT
		        ROW_NUMBER() OVER (ORDER BY A.DEPT_CD) AS RN,
		        A.DEPT_CD,
		        A.DEPT_NAME,
		        A.UP_DEPT_CD,
		        COUNT(B.USER_ID) AS USE_DEPT,
		        A.DEL_YN,
		        A.REG_DT
		    FROM TB_DEPT_INFO A, TB_USER_INFO B
		    WHERE A.DEPT_CD = B.DEPT_CD(+)
	    <if test="deptName != null and deptName != ''">
	        AND A.DEPT_NAME like '%'||#{deptName}||'%'
	    </if>
	    <if test="delYn != null and delYn != ''">
		    AND A.DEL_YN = #{delYn}
		</if>
		 GROUP BY
	        A.DEPT_CD,
	        A.DEPT_NAME,
	        A.UP_DEPT_CD,
	        A.DEL_YN,
	        A.REG_DT
			)
			WHERE RN <![CDATA[ > ]]> (#{currentPage}-1)*#{countPerPage} 
		    AND RN <![CDATA[ <= ]]> #{currentPage}*#{countPerPage} 
	</select>
	
	<select id="selectUpDeptNameList" resultMap="deptMap">
		SELECT
	        DEPT_NAME,
	        DEPT_CD
        FROM TB_DEPT_INFO
	</select>
	
	<select id="selectDeptPopup" resultMap="deptMap">
		SELECT 
	        DEPT_CD,
	        DEPT_NAME,
	        UP_DEPT_CD,
	        DEL_YN
	    FROM TB_DEPT_INFO
	    WHERE DEPT_CD = #{deptCd}
	</select>
	
	<insert id="insertDeptInfo">
		INSERT INTO TB_DEPT_INFO
		    (DEPT_CD, DEPT_NAME, UP_DEPT_CD, DEL_YN, REG_DT, REG_USER_ID)
		VALUES
    		(#{deptCd}, #{deptName}, #{upDeptCd}, #{delYn}, SYSDATE, 'test111')
	</insert>
	
	<update id="updateDeptInfo">
		UPDATE TB_DEPT_INFO
			SET
			    DEPT_CD = #{deptCd},
			    DEPT_NAME = #{deptName},
			    UP_DEPT_CD = #{upDeptCd},
			    DEL_YN = #{delYn}
			WHERE DEPT_CD = #{deptCd}
	</update>
	
	<resultMap type="com.qms.myCode.vo.noticeVO" id="noticeMap">
		<result property="deptCd" 				column="dept_cd"/>
		<result property="deptName" 			column="dept_name"/>
		<result property="comCd" 				column="com_cd"/>
		<result property="comName" 				column="com_name"/>
		<result property="delYn" 				column="del_yn"/>
		<result property="regDt" 				column="reg_dt"/>
		<result property="regUserId" 			column="reg_user_id"/>
		<result property="updDt" 				column="upd_dt"/>
		<result property="updUserId" 			column="upd_user_id"/>	
		<result property="noticeSeq" 	            column="NOTICE_SEQ" />
		<result property="userId"           	    column="USER_ID" />
		<result property="noticeType"     	        column="NOTICE_TYPE" />
		<result property="title"    	            column="TITLE" />
		<result property="content"  	     	    column="CONTENT" />
		<result property="filePath" 	            column="FILE_PATH" />
		<result property="fileName"                 column="FILE_NAME" />
		<result property="delYn"            	    column="DEL_YN" />
		<result property="userName"            	    column="USER_NAME" />		
	</resultMap>
	
	<select id="selectNoticeListSearchCount" resultType="integer">
		SELECT COUNT(*)
		    FROM TB_NOTICE_INFO A, TB_DEPT_INFO B, TB_USER_INFO C, TB_COM_CODE D 
		    WHERE A.USER_ID = C.USER_ID
		    AND B.DEPT_CD = C.DEPT_CD
		    AND D.COM_GRP_CD = #{comGrpCd}
		    AND A.NOTICE_TYPE = D.COM_CD
		    <if test="title != null and title != ''">
	        	AND A.TITLE like '%'||#{title}||'%'
		    </if>
		    <if test="noticeType != null and noticeType != ''">
			    AND A.NOTICE_TYPE = #{noticeType}
			</if>
	</select>
	
	<select id="selectNoticeListSearch" resultMap="noticeMap">
		SELECT
		    NOTICE_SEQ,
		    COM_NAME AS NOTICE_TYPE,
		    TITLE,
		    DEPT_NAME,
		    USER_NAME,
		    FILE_NAME,
		    REG_DT
		FROM (
			SELECT
				ROW_NUMBER() OVER (ORDER BY A.NOTICE_SEQ) AS RN,
			    A.NOTICE_SEQ,
			    D.COM_NAME,
			    A.TITLE,
			    B.DEPT_NAME,
			    C.USER_NAME,
			    A.FILE_NAME,
			    A.REG_DT
			    FROM TB_NOTICE_INFO A, TB_DEPT_INFO B, TB_USER_INFO C, TB_COM_CODE D 
			    WHERE A.USER_ID = C.USER_ID
			    AND B.DEPT_CD = C.DEPT_CD
			    AND D.COM_GRP_CD = #{comGrpCd}
			    AND A.NOTICE_TYPE = D.COM_CD
			    <if test="title != null and title != ''">
		        	AND A.TITLE like '%'||#{title}||'%'
			    </if>
			    <if test="noticeType != null and noticeType != ''">
				    AND A.NOTICE_TYPE = #{noticeType}
				</if>
			    )
			    WHERE RN <![CDATA[ > ]]> (#{currentPage}-1)*#{countPerPage} 
		    	AND RN <![CDATA[ <= ]]> #{currentPage}*#{countPerPage}
		    	ORDER BY RN 
	</select>
	
	<select id="selectNoticeType" resultMap="noticeMap">
		SELECT 
	        COM_NAME,
	        COM_CD
	        FROM TB_COM_CODE
         WHERE COM_GRP_CD = #{comGrpCd}
	</select>
	
	<select id="selectNoticePopup" resultMap="noticeMap">
		SELECT 
	        TITLE,
	        NOTICE_TYPE,
	        CONTENT,
	        FILE_NAME
	    FROM TB_NOTICE_INFO      
	    WHERE NOTICE_SEQ = #{noticeSeq}
	</select>
	
	<insert id="insertNoticeInfo">
	    INSERT INTO TB_NOTICE_INFO
	        (NOTICE_SEQ, USER_ID, NOTICE_TYPE, TITLE, CONTENT, 
	         <if test="filePath != null and filePath != ''">
	         FILE_PATH, FILE_NAME,
	         </if>
	         DEL_YN, REG_DT, REG_USER_ID)
	    VALUES
	        ((SELECT NVL(MAX(NOTICE_SEQ), 0) + 1 FROM TB_NOTICE_INFO), 
	         #{userId}, #{noticeType}, #{title}, #{content}, 
	         <if test="filePath != null and filePath != ''">
	         #{filePath}, #{fileName},
	         </if>
	         'N', SYSDATE, #{userId})
	</insert>

	
	<update id="updateNoticeInfo">
		UPDATE TB_NOTICE_INFO
			SET
			    TITLE = #{title},
			    NOTICE_TYPE = #{noticeType},
			    CONTENT = #{content},
			    FILE_NAME = #{fileName}
			    UPD_DT = SYSDATE
			    UPD_USER_ID = #{userId}
			WHERE NOTICE_SEQ = #{noticeSeq}
	</update>
</mapper>